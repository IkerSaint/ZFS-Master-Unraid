Menu="Main:2"
Title="ZFS Master"
Tag="database"
Cond="file_exists('/usr/sbin/zpool')"
---
<?php

$plugin = "zfs.master";
$docroot = $docroot ?? $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';
$urlzmadmin = "/plugins/".$plugin."/include/ZFSMAdmin.php";
$urlcreatedataset = "/plugins/".$plugin."/include/ZFSMCreateDataset.php";
$urladmindatasetsnaps = "/plugins/".$plugin."/include/ZFSMAdminDatasetSnaps.php";
$refreshbutton = '<span class="zfs_bar_button"><a style="cursor:pointer" class="tooltip" title="Refresh Information" onclick="refreshInfo()"><i id="zfsm-refresh" class="fa fa-refresh"></i></a></span>';
$settingsbutton = '<span class="zfs_bar_button"><a style="cursor:pointer" class="tooltip" title="ZFS Master Settings" href="/Settings/ZFSMasterSettings"><i id="zfsm-settings" class="fa fa-gear"></i></a></span>';

require_once "$docroot/plugins/$plugin/include/ZFSMConstants.php";
require_once "$docroot/plugins/$plugin/include/ZFSMHelpers.php";

$zfsm_cfg = loadConfig(parse_plugin_cfg($plugin, true));
 
  $zpool_global = getZFSPools(); 
  $zpool_datasets = array();
  $zpool_devices = array();

  foreach ($zpool_global as $zpool):
	 $snapscount = 0;
	 $zpool_devices[$zpool['Pool']] = getZFSPoolDevices($zpool['Pool']);
	 $zpool_datasets[$zpool['Pool']] = getZFSPoolDatasets($zpool['Pool'], $snapscount, $zfsm_cfg['dataset_exclussion']);
	 $zpool_global[$zpool['Pool']]['Snapshots'] = $snapscount;
	 $zpool_global[$zpool['Pool']]['MountPoint'] = $zpool_datasets[$zpool['Pool']][0]['MountPoint'];
  endforeach;
?>

<link type="text/css" rel="stylesheet" href="/webGui/styles/font-awesome.css?v=1545863026">

<style type="text/css">	
  .zfs_table td span{margin-left:10px}
  .zfs_table tr>td{width:auto!important}
  .zfs_table tr>td+td+td{text-align:left!important}
  .zfs_table tr>td+td+td+td+td+td+td{text-align:center!important}
  .zfs_table tr>td+td+td+td+td+td+td+td{text-align:left!important}
  .zfs_table tr>td+td+td+td+td+td+td+td+td{text-align:center!important}
  
  .zfs_bar_button {
	  padding-right: 8px;
	  float: right;
  }
  
  .zfs_compact {
	  padding: 2px 4px 3px 6px!important;
	  margin: 2px 2px!important;
  }
  
  .swal2-container.swal2-center>.swal2-popup {
	  font-size: 1.1em;
  }
</style>

<link type="text/css" rel="stylesheet" href="<?autov('/webGui/styles/jquery.ui.css')?>">

<script type="text/javascript" src="<?autov('/webGui/javascript/jquery.switchbutton.js')?>"></script>
<link type="text/css" rel="stylesheet" href="<?autov('/webGui/styles/jquery.switchbutton.css')?>">

<script type="text/javascript" src="<?autov('/plugins/zfs.master/assets/sweetalert2.all.min.js');?>"></script>
<link type="text/css" rel="stylesheet" href="<?autov('/plugins/zfs.master/assets/sweetalert2.min.css');?>">

<div id="zfs_master_div">
<table id="zfs_master" class="zfs_table disk_status wide">
  <thead>
    <tr>
	  <td>Pool</td>
	  <td>Health</td>
	  <td>Option/Dataset Name</td>
	  <td>Size</td>
	  <td>Used</td>
	  <td>Free</td>
	  <td>Refer</td>
	  <td>Mount Point</td>
	  <td>Snapshots</td>
	</tr>
  </thead>
  <tbody id="zpools">
	<?foreach ($zpool_global as $zpool):?>
    <tr>
		<?foreach ($zpool as $key => $zdetail):?>
		 <td id=<?echo '"zpool-attribute-'.$key.'"'?>>
	        <?
			if ($key == "Pool"):
				$zcolor = $statusColor[$zpool['Health']];
				
				echo '<a class="info hand">';
				echo '<i id="zpool-'.$zdetail.'" class="fa fa-circle orb '.$zcolor.'-orb"></i>';
				echo '<span>'.nl2br($zpool_devices[$zdetail]).'</span>';
				echo '</a>';
				echo $zdetail;
			elseif ($key == 'Health'):
				$zcolor = $statusColor[$zdetail];
				$zmsg = $statusMsg[$zdetail];
				
				echo '<a class="info hand">';
				echo '<i class="fa fa-heartbeat" style="color:'.$zcolor.'"></i>';
				echo '<span>'.$zmsg.'</span>';
				echo '</a> ';
				echo $zdetail;
			elseif ($key == "Name"):
				echo '<button type="button" id="show-zpool-'.$zpool['Pool'].'" onclick="toggleTable(\'show-zpool-'.$zpool['Pool'].', \'zpool-'.$zpool['Pool'].'-datasets\');">Show Datasets</button>';
				echo '<button type="button" onclick="scrubPool(\''.$zpool['Pool'].'\')";">Scrub Pool</button>';
				if ($zfsm_cfg['destructive_mode']):
					echo '<button type="button" onclick="exportPool(\''.$zpool['Pool'].'\')";">Export Pool</button>';
				endif;
				echo '<button type="button" onclick="createDataset(\''.$zpool['Pool'].'\')";">Create Dataset</button>';
			elseif ($key == "Used"):
				$percent = 100-round(calculateFreePercent($zpool['Used'], $zpool['Free']));
				echo '<div class="usage-disk"><span style="position:absolute; width:'.$percent.'%" class=""><span>'.$zdetail.'B</span></div>';
			elseif ($key == "Free"):
				$percent = round(calculateFreePercent($zpool['Used'], $zpool['Free']));
				echo '<div class="usage-disk"><span style="position:absolute; width:'.$percent.'%" class=""><span>'.$zdetail.'B</span></div>';
			elseif ($key == 'Snapshots'):
				echo '<i class="fa fa-camera-retro icon"></i> ';
				echo $zdetail;
			else:
				echo $zdetail;
			endif;
			?>
	     </td>
		<?endforeach;?>
	</tr>
		<?foreach ($zpool_datasets[$zpool['Pool']] as $zdataset):?>
		
	<?echo '<tr class="zpool-'.$zpool['Pool'].'-datasets" style="display: '.$_COOKIE['zpool-'.$zpool['Pool'].'-datasets'].';">'?>
			<?foreach ($zdataset as $key => $zdatasetdetail):
			if ($key == 'Attributes'):
				continue;
			endif;?>
			<td>
			<?
			if ($key == "Name"):
				$tmp_array = $zdataset['Attributes'];
				$icon_color = 'grey';
				
				if ($zdataset['Snapshots'] > 0):
					$snaptimestamp = $zdataset['Attributes']['Last Snap Date'];
										
					$snapdate = new DateTime();
					$snapdate->setTimestamp($snaptimestamp);
					
					if (daysToNow($snaptimestamp) > $zfsm_cfg['snap_max_days_alert']):
						$icon_color = 'orange';
					else:
						$icon_color = '#486dba';
					endif;
					
					$tmp_array['Last Snap Date'] = $snapdate->format('Y-m-d H:i:s');
				endif;
				
				echo '<a class="info hand">';
				echo '<i class="fa fa-hdd-o icon" style="color:'.$icon_color.'"></i>';
				echo '<span>'.implodeWithKeys('<br>', $tmp_array).'</span>';
				echo '</a>';
				echo $zdatasetdetail;
			elseif ($key == "Size"):
				if ($zfsm_cfg['destructive_mode']):
					echo '<button type="button" class="zfs_compact" onclick="destroyDataset(\''.$zdataset['Name'].'\');">Destroy</button>';

					if ($zdataset['Snapshots'] > 0):
						echo '<button type="button" class="zfs_compact" onclick="adminDatasetSnaps(\''.$zdataset['Name'].'\');">Snaps</button>';
					else:
						echo '<button type="button" class="zfs_compact" onclick="adminDatasetSnaps(\''.$zdataset['Name'].'\');" disabled>Snaps</button>';
					endif;
				endif;

				#echo '<a class="info hand">';
				#echo '<i class="zfs_bar_button fa fa-gears" onclick="modifyDataset(\''.$zdataset['Name'].'\');"></i>';
				#echo '</a>';
			elseif ($key == "Used"):
				$percent = 100-round(calculateFreePercent($zdataset['Used'], $zdataset['Free']));
				echo '<div class="usage-disk"><span style="position:absolute; width:'.$percent.'%" class=""><span>'.$zdatasetdetail.'B</span></div>';
			elseif ($key == "Free"):
				$percent = round(calculateFreePercent($zdataset['Used'], $zdataset['Free']));
				echo '<div class="usage-disk"><span style="position:absolute; width:'.$percent.'%" class=""><span>'.$zdatasetdetail.'B</span></div>';
			elseif ($key == "Snapshots"):
				$icon_color = 'grey';
				
				if ($zdataset['Snapshots'] > 0):
					$days = daysToNow($zdataset['Attributes']['Last Snap Date']);
					
					if ($days > $zfsm_cfg['snap_max_days_alert']):
						$icon_color = 'orange';
					else:
						$icon_color = '#486dba';
					endif;
				endif;
			
				echo '<i class="fa fa-camera-retro icon" style="color:'.$icon_color.'"></i> ';
				echo $zdatasetdetail;
			elseif ($key == "Attributes"):
				continue;
			else:
				echo $zdatasetdetail;
	        endif;
			?>
			</td>
			<?endforeach;?>
	</tr>
		<?endforeach;?>
	<?endforeach;?>
   </tbody>
</table>
</div>

:zfs_master_help_plug:
> **ZFS Master.**
>
> ZPool Information Tool.
:end
  
<script>
  $(function() {
	  addButtons();
	  setInterval(function () { refreshInfo() }, <?=$zfsm_cfg['refresh_interval']?>*1000);
  });
  
  function refreshInfo() {
	  replaceElementClass("#zfsm-refresh", "fa-refresh", "fa-spinner fa-spin");
	  
	  var $zfs_master = $("#zfs_master_div");
	  
	  $zfs_master.load("Main #zfs_master_div", function() {
		  replaceElementClass("#zfsm-refresh", "fa-spinner fa-spin", "fa-refresh");
	  });
  }
  
  function replaceElementClass(element, oldClass, newClass){
	  $(element).removeClass(oldClass);
	  $(element).addClass(newClass);
  }
  
  function getUnraidParentElement() {
	  return $("div#title > span.left").filter(function(){return $(this).text() === 'ZFS Master';}).parent();
  }
  
  function addButtons() {
	  var parent = getUnraidParentElement();
	  
	  parent.append('<?=$settingsbutton?>');
	  parent.append('<?=$refreshbutton?>');
  }
    
  function setCookie(key, value, daysToLive=3650) {
	var expires = new Date();
	expires.setTime(expires.getTime() + (daysToLive * 24 * 60 * 60));
	document.cookie = key + '=' + value + ';expires=' + expires.toUTCString();
  }

  function getCookie(key) {
	var keyValue = document.cookie.match('(^|;) ?' + key + '=([^;]*)(;|$)');
	return keyValue ? keyValue[2] : null;
  }

  function eraseCookie(key) {
    var keyValue = getCookie(key);
    setCookie(key, keyValue, '-1');
  }
  
  function toggleTable(zpool_id, trclass) {
	var myArray = document.getElementsByClassName(trclass);
	var myButton = document.getElementById(zpool_id)

	for (let mytr of myArray) {
		if (mytr.style.display == "none") {
			setCookie(trclass, 'table-row');	
			$(mytr).show("slow");
			mytr.style.display = 'table-row';
			myButton.firstChild.data = "Hide Datasets";
		}
		else {
			setCookie(trclass, 'none');	
			$(mytr).hide("slow");
			mytr.style.display = 'none';
			myButton.firstChild.data = "Show Datasets";
		}
	}
  }
  
  function createDataset(zpool) {
	  var csrf_token = $("input[name='csrf_token']").val();	  
	  openBox('<?=$urlcreatedataset?>?zpool='+zpool+'&csrf_token='+csrf_token,"Create Dataset",550,680,false);
  }

  function adminDatasetSnaps(zdataset) {
	  var csrf_token = $("input[name='csrf_token']").val();	  
	  openBox('<?=$urladmindatasetsnaps?>?zdataset='+zdataset+'&csrf_token='+csrf_token,"Admin Dataset Snapshots",680,800,false);
  }
  
  function destroyDataset(zdataset) {
	  Swal2.fire({
		  title: '<strong>Destroy Dataset<br>'+zdataset+'</strong>',
		  icon: 'warning',
		  html: 'This operation will destroy the Dataset, <b>which cannot be undone</b>, are you sure?',
		  input: 'checkbox',
		  inputPlaceholder: 'Force and Recursively Destroy all Children and Dependents',
		  showConfirmButton: true,
		  confirmButtonText: "Destroy",
		  showCancelButton: true
	  }).then((result) => {
		  if (result.isConfirmed) {
			  $.post('<?=$urlzmadmin?>',{cmd: 'destroydataset', data: zdataset, force: result.value}, function(data) {
				  if (data == 'Ok') {
					Swal2.fire({
						title: 'Success!',
						icon: 'success',
						text: 'Dataset '+zdataset+' destroyed'
					});
				  } else {
					Swal2.fire({
						title: 'Error!',
						icon: 'error',
						html: 'Unable to destroy dataset '+zdataset+'<br>Output: '+data
					}); 
				  }
			  });
		  }
	  });
  }
  
  function scrubPool(zpool) {
	$.post('<?=$urlzmadmin?>',{cmd: 'scrubpool', data: zpool},function(data) {
		if (data == 'Ok') {
			Swal2.fire({
				title: 'Success!',
				icon:'success',
				html: 'Scrub of '+zpool+' started'
			});
		} else {
			Swal2.fire({
				title: 'Error!',
				icon:'error',
				html: 'Scrub of '+zpool+' failed to start<br>Output: '+data
			}); 
		}
	});
  }
  
  function exportPool(zpool) {
	  Swal2.fire({
		  title: '<strong>Export Pool<br>'+zpool+'</strong>',
		  icon: 'warning',
		  html: 'This operation will export the Pool, <b>This could lead to potential data corruption</b>, are you sure?',
		  input: 'checkbox',
		  inputPlaceholder: 'Forcefully unmount all datasets, and allow export of pool with active shared spares',
		  showConfirmButton: true,
		  confirmButtonText: "Export",
		  showCancelButton: true
	  }).then((result) => {
		  if (result.isConfirmed) {
			  $.post('<?=$urlzmadmin?>',{cmd: 'exportpool', data: zpool, force: result.value}, function(data) {
				  if (data == 'Ok') {
					Swal2.fire({
						title: 'Success!',
						icon: 'success',
						text: 'Pool '+zpool+' Exported'
					});
				  } else {
					Swal2.fire({
						title: 'Error!',
						icon: 'error',
						html: 'Unable to Export pool '+zpool+'<br>Output: '+data
					}); 
				  }
			  });
		  }
	  });
  }
</script>
